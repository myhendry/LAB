/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735f4ec3df9cbd43714fe2740f5e3616155c5b84196000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107a6806100b56000396000f3fe6080604052600436106100345760003560e01c80636b69a592146100395780638da5cb5b14610064578063d2f7265a1461008f575b600080fd5b34801561004557600080fd5b5061004e6100ad565b60405161005b9190610454565b60405180910390f35b34801561007057600080fd5b506100796100ba565b6040516100869190610409565b60405180910390f35b6100976100e0565b6040516100a49190610454565b60405180910390f35b6802b5e3af16b188000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061011660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461011c90919063ffffffff16565b90505090565b60008061012883610197565b90506101696040518060400160405280600881526020017f657468507269636500000000000000000000000000000000000000000000000081525082610237565b6000670de0b6b3a7640000858361018091906105d3565b61018a919061048b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156101e057600080fd5b505afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610218919061033b565b5050509150506402540be4008161022f91906104bc565b915050919050565b6102cf828260405160240161024d929190610424565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102d3565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008151905061030b8161072b565b92915050565b60008151905061032081610742565b92915050565b60008151905061033581610759565b92915050565b600080600080600060a0868803121561035357600080fd5b600061036188828901610326565b9550506020610372888289016102fc565b945050604061038388828901610311565b935050606061039488828901610311565b92505060806103a588828901610326565b9150509295509295909350565b6103bb8161062d565b82525050565b60006103cc8261046f565b6103d6818561047a565b93506103e6818560208601610689565b6103ef8161071a565b840191505092915050565b61040381610669565b82525050565b600060208201905061041e60008301846103b2565b92915050565b6000604082019050818103600083015261043e81856103c1565b905061044d60208301846103fa565b9392505050565b600060208201905061046960008301846103fa565b92915050565b600081519050919050565b600082825260208201905092915050565b600061049682610669565b91506104a183610669565b9250826104b1576104b06106eb565b5b828204905092915050565b60006104c78261063f565b91506104d28361063f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610511576105106106bc565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561054e5761054d6106bc565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561058b5761058a6106bc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156105c8576105c76106bc565b5b828202905092915050565b60006105de82610669565b91506105e983610669565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610622576106216106bc565b5b828202905092915050565b600061063882610649565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60005b838110156106a757808201518184015260208101905061068c565b838111156106b6576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6107348161063f565b811461073f57600080fd5b50565b61074b81610669565b811461075657600080fd5b50565b61076281610673565b811461076d57600080fd5b5056fea26469706673582212202ac097e0424fdbecc2bb30cc3eb53f64a36514a190d199119b70378722c1139464736f6c63430008010033";

export class Converter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
