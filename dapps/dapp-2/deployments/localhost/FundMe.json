{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x488c7e2973d51157c7f5a08aa7861e8c8f3ad4920dc1bce1799bfa3516adf2ce",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "896070",
    "logsBloom": "0x
    "blockHash": "0x633692814a65f46926f1c1e1875136e803f2afdac729bf6a6bc421c91795bec3",
    "transactionHash": "0x488c7e2973d51157c7f5a08aa7861e8c8f3ad4920dc1bce1799bfa3516adf2ce",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "896070",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "f837506b290903faf8dc4e29fb782aea",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"H Lim\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FundMe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor receive fallback external public internal private view / pure\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n/* \\nStyle Guide\\n1. Pragma Statements\\n2. Import Statements\\nErrors\\n3. Interfaces\\n4. Libraries\\n5. Contracts\\n\\nInside each contract, library or interface, use the following order:\\n1. Type Declarations\\n2. State Variables\\n3. Events\\n4. Modifiers\\n5. Functions\\n\\n*/\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// natspec format\\n/** @title FundMe\\n *   @author H Lim\\n *   @notice This contract is to demo a sample funding contract\\n *   @dev This implements price feeds as our library\\n */\\n// solc --userdoc --devdoc ex1.sol\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    /// constructor\\n    /// receive\\n    /// fallback\\n    /// external\\n    /// public\\n    /// internal\\n    /// private\\n    /// view / pure\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc5795f8f00f4cdef00ee57f205cc30f463fd68a83ec7d8fc845a17c23cb5fec2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x419e870dd6d10bca766d7b6ad8f38b135cb116d3bfe60d65b3e9ebfab9f51eea\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200103c3803806200103c83398181016040528101906100349190610115565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ed4620001686000396000818161036e01526105bd0152610ed46000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146100ed5780639e87a5cd14610118578063b60d428814610143578063d7b4750c1461014d57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780636b69a592146100c257610083565b366100835761008161018a565b005b61008b61018a565b005b34801561009957600080fd5b506100a26102c5565b6040516100af91906107ee565b60405180910390f35b6100c061036c565b005b3480156100ce57600080fd5b506100d76105ac565b6040516100e491906107ee565b60405180910390f35b3480156100f957600080fd5b506101026105b9565b60405161010f919061084a565b60405180910390f35b34801561012457600080fd5b5061012d6105e1565b60405161013a91906108c4565b60405180910390f35b61014b61018a565b005b34801561015957600080fd5b50610174600480360381019061016f9190610910565b61060b565b604051610181919061084a565b60405180910390f35b6802b5e3af16b18800006101c9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065290919063ffffffff16565b101561020a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102019061099a565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461025991906109e9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561032f57600080fd5b505afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610a54565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049c57600080828154811061041657610415610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049490610ab0565b9150506103f4565b50600067ffffffffffffffff8111156104b8576104b7610af9565b5b6040519080825280602002602001820160405280156104e65781602001602082028036833780820191505090505b50600090805190602001906104fc92919061072e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052390610b59565b60006040518083038185875af1925050503d8060008114610560576040519150601f19603f3d011682016040523d82523d6000602084013e610565565b606091505b50509050806105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090610bba565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106205761061f610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061065e8361068e565b90506000670de0b6b3a764000085836106779190610bda565b6106819190610c63565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d757600080fd5b505afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610d0c565b5050509150506402540be400816107269190610d87565b915050919050565b8280548282559060005260206000209081019282156107a7579160200282015b828111156107a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061074e565b5b5090506107b491906107b8565b5090565b5b808211156107d15760008160009055506001016107b9565b5090565b6000819050919050565b6107e8816107d5565b82525050565b600060208201905061080360008301846107df565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083482610809565b9050919050565b61084481610829565b82525050565b600060208201905061085f600083018461083b565b92915050565b6000819050919050565b600061088a61088561088084610809565b610865565b610809565b9050919050565b600061089c8261086f565b9050919050565b60006108ae82610891565b9050919050565b6108be816108a3565b82525050565b60006020820190506108d960008301846108b5565b92915050565b600080fd5b6108ed816107d5565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b600060208284031215610926576109256108df565b5b6000610934848285016108fb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610984601b8361093d565b915061098f8261094e565b602082019050919050565b600060208201905081810360008301526109b381610977565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f4826107d5565b91506109ff836107d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3457610a336109ba565b5b828201905092915050565b600081519050610a4e816108e4565b92915050565b600060208284031215610a6a57610a696108df565b5b6000610a7884828501610a3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abb826107d5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aee57610aed6109ba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b43600083610b28565b9150610b4e82610b33565b600082019050919050565b6000610b6482610b36565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba4600b8361093d565b9150610baf82610b6e565b602082019050919050565b60006020820190508181036000830152610bd381610b97565b9050919050565b6000610be5826107d5565b9150610bf0836107d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2957610c286109ba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6e826107d5565b9150610c79836107d5565b925082610c8957610c88610c34565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb381610c94565b8114610cbe57600080fd5b50565b600081519050610cd081610caa565b92915050565b6000819050919050565b610ce981610cd6565b8114610cf457600080fd5b50565b600081519050610d0681610ce0565b92915050565b600080600080600060a08688031215610d2857610d276108df565b5b6000610d3688828901610cc1565b9550506020610d4788828901610cf7565b9450506040610d5888828901610a3f565b9350506060610d6988828901610a3f565b9250506080610d7a88828901610cc1565b9150509295509295909350565b6000610d9282610cd6565b9150610d9d83610cd6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ddc57610ddb6109ba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1957610e186109ba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e5657610e556109ba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e9357610e926109ba565b5b82820290509291505056fea2646970667358221220c895fe03614cddc4fc3ad752ed55960004579602dcdd619e6e78c2a01f7f631164736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146100ed5780639e87a5cd14610118578063b60d428814610143578063d7b4750c1461014d57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780636b69a592146100c257610083565b366100835761008161018a565b005b61008b61018a565b005b34801561009957600080fd5b506100a26102c5565b6040516100af91906107ee565b60405180910390f35b6100c061036c565b005b3480156100ce57600080fd5b506100d76105ac565b6040516100e491906107ee565b60405180910390f35b3480156100f957600080fd5b506101026105b9565b60405161010f919061084a565b60405180910390f35b34801561012457600080fd5b5061012d6105e1565b60405161013a91906108c4565b60405180910390f35b61014b61018a565b005b34801561015957600080fd5b50610174600480360381019061016f9190610910565b61060b565b604051610181919061084a565b60405180910390f35b6802b5e3af16b18800006101c9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065290919063ffffffff16565b101561020a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102019061099a565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461025991906109e9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561032f57600080fd5b505afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610a54565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049c57600080828154811061041657610415610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049490610ab0565b9150506103f4565b50600067ffffffffffffffff8111156104b8576104b7610af9565b5b6040519080825280602002602001820160405280156104e65781602001602082028036833780820191505090505b50600090805190602001906104fc92919061072e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052390610b59565b60006040518083038185875af1925050503d8060008114610560576040519150601f19603f3d011682016040523d82523d6000602084013e610565565b606091505b50509050806105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090610bba565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106205761061f610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061065e8361068e565b90506000670de0b6b3a764000085836106779190610bda565b6106819190610c63565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d757600080fd5b505afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610d0c565b5050509150506402540be400816107269190610d87565b915050919050565b8280548282559060005260206000209081019282156107a7579160200282015b828111156107a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061074e565b5b5090506107b491906107b8565b5090565b5b808211156107d15760008160009055506001016107b9565b5090565b6000819050919050565b6107e8816107d5565b82525050565b600060208201905061080360008301846107df565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083482610809565b9050919050565b61084481610829565b82525050565b600060208201905061085f600083018461083b565b92915050565b6000819050919050565b600061088a61088561088084610809565b610865565b610809565b9050919050565b600061089c8261086f565b9050919050565b60006108ae82610891565b9050919050565b6108be816108a3565b82525050565b60006020820190506108d960008301846108b5565b92915050565b600080fd5b6108ed816107d5565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b600060208284031215610926576109256108df565b5b6000610934848285016108fb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610984601b8361093d565b915061098f8261094e565b602082019050919050565b600060208201905081810360008301526109b381610977565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f4826107d5565b91506109ff836107d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3457610a336109ba565b5b828201905092915050565b600081519050610a4e816108e4565b92915050565b600060208284031215610a6a57610a696108df565b5b6000610a7884828501610a3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abb826107d5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aee57610aed6109ba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b43600083610b28565b9150610b4e82610b33565b600082019050919050565b6000610b6482610b36565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba4600b8361093d565b9150610baf82610b6e565b602082019050919050565b60006020820190508181036000830152610bd381610b97565b9050919050565b6000610be5826107d5565b9150610bf0836107d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2957610c286109ba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6e826107d5565b9150610c79836107d5565b925082610c8957610c88610c34565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb381610c94565b8114610cbe57600080fd5b50565b600081519050610cd081610caa565b92915050565b6000819050919050565b610ce981610cd6565b8114610cf457600080fd5b50565b600081519050610d0681610ce0565b92915050565b600080600080600060a08688031215610d2857610d276108df565b5b6000610d3688828901610cc1565b9550506020610d4788828901610cf7565b9450506040610d5888828901610a3f565b9350506060610d6988828901610a3f565b9250506080610d7a88828901610cc1565b9150509295509295909350565b6000610d9282610cd6565b9150610d9d83610cd6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ddc57610ddb6109ba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1957610e186109ba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e5657610e556109ba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e9357610e926109ba565b5b82820290509291505056fea2646970667358221220c895fe03614cddc4fc3ad752ed55960004579602dcdd619e6e78c2a01f7f631164736f6c63430008080033",
  "devdoc": {
    "author": "H Lim",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "FundMe",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor receive fallback external public internal private view / pure"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}